name: Code Quality & Security

on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main]
  schedule:
    - cron: "0 2 * * 1" # Weekly security scan

jobs:
  lint:
    name: Code Linting
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "20.x"
          cache: "npm"

      - name: Install dependencies
        run: npm ci

      - name: Run ESLint
        run: npx eslint . --ext .ts,.tsx --format=json --output-file=eslint-report.json
        continue-on-error: true

      - name: Upload ESLint report
        uses: actions/upload-artifact@v4
        with:
          name: eslint-report
          path: eslint-report.json

  format:
    name: Code Formatting
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "20.x"
          cache: "npm"

      - name: Install dependencies
        run: npm ci

      - name: Check Prettier formatting
        run: npx prettier --check .

      - name: Auto-fix formatting (PR only)
        if: github.event_name == 'pull_request'
        run: |
          npx prettier --write .
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          git add .
          git diff --staged --quiet || git commit -m "Auto-fix formatting"

  security:
    name: Security Scan
    runs-on: ubuntu-latest
    permissions:
      security-events: write
      actions: read
      contents: read
      pull-requests: read

    steps:
      - uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "20.x"
          cache: "npm"

      - name: Install dependencies
        run: npm ci

      - name: Run npm audit
        run: npm audit --audit-level=high --json > audit-report.json || true
        continue-on-error: true

      - name: Upload audit report
        uses: actions/upload-artifact@v4
        with:
          name: security-audit
          path: audit-report.json

      - name: Run ESLint Security Rules
        run: |
          npx eslint . --ext .ts,.tsx,.js,.jsx \
            --config .eslintrc.json \
            --format json \
            --output-file eslint-security.json || true
        continue-on-error: true

      - name: Run Semgrep Security Scan
        uses: returntocorp/semgrep-action@v1
        with:
          config: >-
            p/security-audit
            p/secrets
            p/javascript
            p/typescript
        continue-on-error: true

      - name: Initialize CodeQL (Analysis Only)
        uses: github/codeql-action/init@v3
        with:
          languages: javascript
          queries: security-and-quality

      - name: Build application for CodeQL analysis
        run: npm run build

      - name: Perform CodeQL Analysis (Local Only)
        uses: github/codeql-action/analyze@v3
        with:
          category: "/language:javascript"
          upload-database: false
        continue-on-error: true

  dependency-review:
    name: Dependency Review
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request'

    steps:
      - uses: actions/checkout@v4

      - name: Dependency Review
        uses: actions/dependency-review-action@v4
        with:
          fail-on-severity: high
          allow-licenses: MIT, Apache-2.0, BSD-2-Clause, BSD-3-Clause, ISC
        continue-on-error: true

  performance:
    name: Performance Analysis
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "20.x"
          cache: "npm"

      - name: Install dependencies
        run: npm ci

      - name: Build application
        run: npm run build

      - name: Analyze bundle size
        run: |
          echo "Bundle size analysis integrated with build process"
          ls -la dist/public/assets/ || echo "No assets directory found"
          du -sh dist/ || echo "No dist directory found"
        continue-on-error: true

      - name: Upload build info
        uses: actions/upload-artifact@v4
        with:
          name: build-info
          path: dist/
        continue-on-error: true
